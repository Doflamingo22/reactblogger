{"version":3,"sources":["serviceWorker.js","container/template/Header/Header.jsx","container/template/Footer/Footer.jsx","container/template/Wrapper/Wrapper.jsx","container/template/ContentWrapper/ContentWrapper.jsx","component/AnimeCard/AnimeCard.jsx","component/AnimeStack/AnimeStack.jsx","service/Service.jsx","component/LoadingScreen/Loading.jsx","context/Context.jsx","container/pages/Home/Home.jsx","component/AnimePost/AnimePost.jsx","container/pages/Post/Post.jsx","router/RootRouter.jsx","container/pages/AnimeList/AnimeList.jsx","component/AnimeVideoPlayer/AnimeVideoPlayer.jsx","component/AnimePlayList/AnimePlayList.jsx","container/pages/PlayerPage/PlayerPage.jsx","router/Router.jsx","index.js","component/AnimePlayList/AnimePlayList.module.css","container/template/Header/Header.module.css","container/pages/AnimeList/AnimeList.module.css","component/AnimeStack/AnimeStack.module.css","component/AnimePost/AnimePost.module.css","component/AnimeCard/AnimeCard.module.css","container/pages/PlayerPage/PlayerPage.module.css","container/template/Wrapper/Wrapper.module.css","component/LoadingScreen/Loading.module.css","container/template/Footer/Footer.module.css","container/pages/Home/Home.module.css"],"names":["Boolean","window","location","hostname","match","Header","state","menuToggle","handleMenuToggle","_this","setState","console","log","_this2","this","react_default","a","createElement","className","style","headerSection","headerRow","headerLeft","headerBrand","headerTitle","react_router_dom","to","onClick","active","headerRight","headerNavigation","cureentNav","Component","Footer","footer","SiteWrapper","Content","_Component","Wrapper","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","siteWrapper","siteContent","template_Header_Header","props","template_Footer_Footer","ContentWrapper","ContentMain","contentSection","AnimeCard","lastEpisode","animeData","anime_play_data","play360","lastEpsText","length","anime_play_title","title","anime_title","split","join","toLocaleLowerCase","replace","anime","currentPlay","anotherList","data-id","anime_id","data-mal-id","anime_mal_id","animeCard","animeCardItem","rating","react_icons_kit","icon","ic_star","color","lineHeight","anime_score","linkToPost","animeCardImage","src","anime_poster","alt","animeCardBody","animeCardTitle","linkToPlayer","play_id","animeCardLastUp","AnimeStack","_useState","useState","_useState2","slicedToArray","anime_data","onSearch","_useState3","_useState4","inputText","onInput","useEffect","text","resultAnime","toConsumableArray","forEach","searchResult","toLowerCase","indexOf","searchResultByGenre","anime_genre","searchResultByScore","searchResultByRilis","anime_release","searchResultByStudio","anime_studios","searchResultBySinopsis","anime_sinopsis","searchResultByOngoing","searchResultByCompleted","searchResultByStatus","anime_status","push","handleContent","stackWrapper","stackHeader","stackTitle","stackSearch","onChange","e","target","type","defaultValue","placeholder","stackBody","animeCardRow","map","index","component_AnimeCard_AnimeCard","anime_play_id","mal_id","textAlign","width","stackFooter","btnWrapper","isLoading","btnLoadMoreEmpty","emptyList","onLoadMore","btnLoadMore","config","Get","path","status","Promise","resolve","reject","url","concat","fetch","method","headers","Content-Type","Accept","then","response","ok","json","error","AnimeAPI","getAnime","obj","undefined","id","order_by","listed","genre","limit","limit_offset","getAnimeFromMal","getAnimeCounter","getAnimePlayList","anime_play_quality","Loading","isHide","loading","willHide","loadingIcon","React","RootContext","createContext","Provider","Consumer","GlobalConsumer","ChildConsumerComponent","_Component2","ParentConsumerComponent","assign","GlobalProvider","ChildProviderComponent","ParentProviderComponent","call","dispatch","handleAnimeCounter","catch","handleGetAnime","data","reverse","Anime","handleGetAnimeFromMal","animeInfo","anime_info","animeState","counter","handleSendAnimeProps","handleGapi","gapiScript","document","body","appendChild","handlePlyrScript","plyrscript","Author","GlobalState","RootState","RootAction","react","LoadingScreen_Loading","transition","opacity","zIndex","Home","handleAnimeData","setTimeout","handleLoadMore","copyState","newState","params","statusCode","handleLinkToPost","history","handleLinkToPlayer","getElementsByTagName","scrollTop","homeComponent","component_AnimeStack_AnimeStack","AnimePost","PlayList","linkParams","playdata","epsList","epsListItem","backgroundImage","anime_thumb","epsListThumb","epsListText","epsListTitle","animePostComponent","animePostBody","animePostRow","animePostLeft","animeCover","animeCoverPic","infoTitle","anime_alternative","anime_type","anime_episode","anime_duration","animePostRight","animeSinopsis","animePostTitle","dangerouslySetInnerHTML","__html","animeEpsList","animePostBottom","animeVideo","dataObj","_this3","postSection","postRow","postLeft","hasOwnProperty","Fragment","component_AnimePost_AnimePost","postRight","RootRouter","ChildRouter","ParentRouter","SearchField","searchSection","name","AnimeList","handleGetAnimes","animes","prevState","sort","handleSearch","animesOnSearch","handleMode","simpleMode","alphabeta","toUpperCase","hasSameAlphaBeta","find","animeListSection","animeListHeader","AnimeList_SearchField","animeListBody","mode","animeListBlock","animeListRow","alpha","has","href","AnimeVideoPlayer","pip","playing","controls","light","volume","muted","played","loaded","duration","playbackRate","loop","load","playPause","stop","toggleControls","toggleLight","toggleLoop","setVolume","parseFloat","toggleMuted","setPlaybackRate","togglePIP","onPlay","playToggle","onEnablePIP","onDisablePIP","onPause","onSeekMouseDown","seeking","onSeekChange","onSeekMouseUp","player","seekTo","onProgress","onEnded","onDuration","renderLoadButton","label","ref","_this$state","ReactPlayer_default","autoPlay","height","video","anime_play_link","onReady","onStart","onBuffer","onSeek","onError","ic_pause_circle_filled","ic_play_circle_filled","size","min","max","step","onMouseDown","onMouseUp","AnimePlayList","styles","section","header","playlist","headerInfo","headerStatus","allPlayList","list","currentEpisode","changeVideo","listItem","listThumbWrapper","thumb","listText","epsTitle","ic_play_arrow","PlayerPage","handleChangeVideo","handleGetCurrentPlayVideo","handleGetAnimeData","componentDidMount","playerPageSection","videoWrapper","videoRow","videoLeft","component_AnimeVideoPlayer_AnimeVideoPlayer","videoRight","component_AnimePlayList_AnimePlayList","react_router","component","exact","Post","ReactDOM","render","router_Router","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7595c959.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport style from './Header.module.css';\n\nclass Header extends Component  {\n  state = {\n    menuToggle : false,\n  }\n  \n  handleMenuToggle = () => {\n    this.setState({\n      menuToggle : !this.state.menuToggle\n    }, () => {\n      console.log(this.state.menuToggle);\n    })\n  }\n  \n  render(){\n    return(\n      <header className={style.headerSection}>\n        <div className={style.headerRow}>\n          <div className={style.headerLeft}>\n            <div className={style.headerBrand}>\n              <h1 className={style.headerTitle}>\n                <Link to=\"/\">Weboonime</Link>\n              </h1>\n            </div>\n            <span onClick={() => this.handleMenuToggle() } className={this.state.menuToggle ? style.menuToggle +\" \"+ style.active : style.menuToggle}>\n              <span></span>\n              <span></span>\n              <span></span>\n            </span>            \n          </div>\n          <div className={style.headerRight}>\n            <nav className={this.state.menuToggle ? style.headerNavigation + \" \" + style.active : style.headerNavigation }>\n              <ul onClick={() => this.handleMenuToggle() }>\n                <li className={style.cureentNav}><Link to='/'>Home</Link></li>\n                <li><Link to='/anime-list'>AnimeList</Link></li>\n                <li><Link to='/'>About</Link></li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport style from './Footer.module.css';\n\nclass Footer extends Component {\n  render(){\n    return(\n      <footer className={style.footer}>\n        <div>\n          <p>Credit by Itonamikaze @codepelajar</p>\n        </div>\n      </footer>\n    )\n  }\n}\n\nexport default Footer;","import React, {Component} from 'react';\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport style from './Wrapper.module.css';\n\n\nconst SiteWrapper = (Content) => {\n  return(\n    class Wrapper extends Component {\n      render(){\n        return(\n          <div className={style.siteWrapper}>\n            <div className={style.siteContent}>\n              <Header {...this.props} />\n              <Content {...this.props} />\n              <Footer {...this.props} />\n            </div>\n          </div>\n        )\n      }\n    }\n  )\n}\n\nexport default SiteWrapper;","import React, {Component} from 'react';\nimport style from './ContentWrapper.module.css';\n\n\nconst ContentWrapper = (ContentMain) => {\n  return(\n    class Content extends Component {\n      render(){\n        return(\n          <div className={style.contentSection}>\n            <ContentMain {...this.props} />\n          </div>\n        )\n      }\n    }\n  );\n}\n\nexport default ContentWrapper;","import React from 'react';\nimport style from './AnimeCard.module.css';\nimport { Icon } from 'react-icons-kit';\nimport {ic_star} from 'react-icons-kit/md/ic_star';\n\nconst AnimeCard = (props) => {\n  let lastEpisode = props.animeData.anime_play_data.play360;\n  let lastEpsText = \"No Episode\";\n  if(lastEpisode.length > 0){\n    lastEpsText = lastEpisode[0].anime_play_title;\n  }\n  let title = props.animeData.anime_title.split(\" \").join(\"-\").toLocaleLowerCase().replace(\"!\", \"\").replace(\"?\", \"\").replace(\":\", \"\");\n  let state = {\n    anime : props.animeData,\n    currentPlay : lastEpisode[0],\n    anotherList : lastEpisode,\n  }\n  \n  \n  return(\n    <div data-id={props.animeData.anime_id} data-mal-id={props.animeData.anime_mal_id} className={style.animeCard}>\n      <div className={style.animeCardItem}>\n        <span className={style.rating}>\n          <Icon icon={ic_star} style={{color : '#eccc68', lineHeight : '10px'}} />\n          {props.animeData.anime_score}\n        </span>\n        <div onClick={() => props.linkToPost(props.animeData.anime_mal_id, title, props.animeData)} className={style.animeCardImage}>\n          <img src={props.animeData.anime_poster} alt={props.animeData.anime_title} />\n        </div>\n        <div className={style.animeCardBody}>\n          <h2 onClick={() => props.linkToPost(props.animeData.anime_mal_id, title, props.animeData)} className={style.animeCardTitle}>{props.animeData.anime_title}</h2>\n          <span onClick={lastEpisode.length > 0 ? () => props.linkToPlayer(props.animeData.anime_mal_id, title, lastEpisode[0].play_id, lastEpisode[0].anime_play_title.split(\" \").join(\"-\").toLocaleLowerCase(), state ) : null} className={style.animeCardLastUp}>{lastEpisode.length > 0 ? lastEpsText : lastEpsText}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AnimeCard;","import React, {useState, useEffect} from 'react';\nimport style from './AnimeStack.module.css';\nimport AnimeCard from '../AnimeCard/AnimeCard';\n\n\nconst AnimeStack  = (props) => {\n  const animeData = props.animeData;\n  const [anime_data, onSearch] = useState(props.animeData);\n  const [inputText, onInput] = useState(\"\");\n  \n  const handleContent = (text) => {\n    if(text !== \"\"){\n      let resultAnime = [];\n      let animes = [...animeData];\n      animes.forEach((anime) => {\n        let searchResult = anime.anime_title.toLowerCase().indexOf(text.toLowerCase());\n        let searchResultByGenre = anime.anime_genre.toLowerCase().indexOf(inputText.toLowerCase());\n        let searchResultByScore = anime.anime_score.toLowerCase().indexOf(inputText.toLowerCase());\n        let searchResultByRilis = anime.anime_release.toLowerCase().indexOf(inputText.toLowerCase());\n        let searchResultByStudio = anime.anime_studios.toLowerCase().indexOf(inputText.toLowerCase());\n        let searchResultBySinopsis = anime.anime_sinopsis.toLowerCase().indexOf(inputText.toLowerCase());\n        let ongoing = \"ongoing\";\n        let completed = \"completed\";\n        let searchResultByOngoing = ongoing.indexOf(inputText.toLowerCase());\n        let searchResultByCompleted = completed.indexOf(inputText.toLowerCase());\n        let searchResultByStatus = anime.anime_status.toLowerCase().indexOf(inputText.toLowerCase());\n        \n        if(searchResult !== -1 && searchResult !== \"undefined\"){\n          resultAnime.push(anime)\n        }else if(searchResultByGenre !== -1 && searchResultByGenre !== \"undefined\"){\n          resultAnime.push(anime)          \n        }else if(searchResultByScore !== -1 && searchResultByScore !== \"undefined\"){\n          resultAnime.push(anime)          \n        }else if(searchResultByRilis !== -1 && searchResultByRilis !== \"undefined\"){\n          resultAnime.push(anime)          \n        }else if(searchResultByStudio !== -1 && searchResultByStudio !== \"undefined\"){\n          resultAnime.push(anime)          \n        }else if(searchResultBySinopsis !== -1 && searchResultBySinopsis !== \"undefined\"){\n          resultAnime.push(anime)          \n        }else if(searchResultByOngoing !== -1 && searchResultByOngoing !== \"undefined\"){\n          if(anime.anime_status.toLowerCase() === \"currently airing\"){\n            resultAnime.push(anime)\n          }\n        }else if(searchResultByCompleted !== -1 && searchResultByCompleted !== \"undefined\"){\n          if(anime.anime_status.toLowerCase() === \"finished airing\"){\n            resultAnime.push(anime)\n          }\n        }else if(searchResultByStatus !== -1 && searchResultByStatus !== \"undefined\"){\n          resultAnime.push(anime)          \n        }\n      })\n      onSearch(resultAnime);\n    } else {\n      onSearch(animeData);\n    }\n  }\n  useEffect(() => {\n    handleContent(inputText)\n  })\n  return(\n    <div className={style.stackWrapper}>\n      <div className={style.stackHeader}>\n        <h4 className={style.stackTitle}>{props.title}</h4>\n        <div className={style.stackSearch}>\n          <input onChange = {(e) => onInput(e.target.value)} type=\"text\" defaultValue=\"\" placeholder=\"search..\" />\n        </div>\n      </div>\n      <div className={style.stackBody}>\n        <div className={style.animeCardRow}>\n          {\n            anime_data.length > 0 ?\n            anime_data.map((anime, index) => {\n              return(\n                <AnimeCard\n                  linkToPlayer = {(anime_mal_id, anime_title, anime_play_id, anime_play_title, anime_data) => props.linkToPlayer(anime_mal_id, anime_title, anime_play_id,anime_play_title, anime_data)}\n                  linkToPost={(mal_id, anime_title, anime) => props.linkToPost(mal_id, anime_title, anime)}\n                  key={index}\n                  animeData={anime}\n                />\n              )    \n            })\n            :\n            <div style={{textAlign : \"center\", width : \"100%\"}}>\n              <span>Tidak ada hasil dari: <b>{inputText}</b></span>\n            </div>\n          }\n        </div>\n      </div>\n      <div className={style.stackFooter}>\n        <div className={style.btnWrapper}>\n          {\n            props.isLoading ? \n              <button className={style.btnLoadMoreEmpty}>Please Wait...</button>\n            :\n              props.emptyList ?\n                <button className={style.btnLoadMoreEmpty}>Loaded</button>\n              :\n                <button onClick={() => props.onLoadMore()} className={style.btnLoadMore}>Show More</button>\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AnimeStack;","// setting service\nconst config = {\n  // onlinePath : \"http://192.168.100.3/weebonime/\",\n  onlinePath : \"http://weebonime.jalanpelajar.com/\",\n  offlinePath : \"http://localhost/weebonime/\",\n  isOnline : true,\n}\n\nconst Get = (path, status) => {\n  let promise = new Promise((resolve, reject) => {\n    let url = `${status ? config.onlinePath : config.offlinePath}${path}`\n    fetch(url,{\n      method : \"GET\",\n      headers : {\n        \"Content-Type\" : \"application/json\",\n        \"Accept\" : \"application/json\"\n      }\n    }).then((response) => {\n      if(response.ok){\n        resolve(response.json());\n      } else {\n        // console.log(\"ini\", response)\n        if(response.status === 404){\n          resolve(response.json());\n        }\n        // reject(new Error('error'))\n      }\n    },  (error) => {\n      console.log(error);\n      resolve(error.json())\n      // reject(new Error(error))\n    })\n  });\n  return promise;\n}\n\nconst getAnime = (obj = null) => {\n  if(obj !== null ){\n    if(typeof(obj.id) === \"undefined\" || obj.id === \"\" || obj.id === null){\n      obj.id = null;\n    }\n    if(typeof(obj.mal_id) === \"undefined\" || obj.mal_id === \"\" || obj.mal_id === null){\n      obj.mal_id = null;\n    }\n    if(typeof(obj.order_by) === \"undefined\" || obj.order_by === \"\" || obj.order_by === null){\n      obj.order_by = null\n    }\n    if(typeof(obj.listed) === \"undefined\" || obj.listed === \"\" || obj.listed === null){\n      obj.listed = null\n    }\n    if(typeof(obj.genre) === \"undefined\" || obj.genre === \"\" || obj.genre === null){\n      obj.genre = null\n    }\n    if(typeof(obj.limit) === \"undefined\" || obj.limit === \"\" || obj.limit === null){\n      obj.limit = null\n    }\n    if(typeof(obj.limit_offset) === \"undefined\" || obj.limit_offset === \"\" || obj.limit_offset === null){\n      obj.limit_offset = null\n    }\n  }\n  let path = `api/animes${obj === null ? \"\" : obj.id === null ? \"\" : \"?anime_id=\" + obj.id}${obj === null ? \"\" : obj.mal_id === null ? \"\" : obj.id === null ? \"?anime_mal_id=\" + obj.mal_id : \"&anime_mal_id=\" + obj.mal_id}${obj === null ? \"\" : obj.order_by === null ? \"\" : obj.id === null && obj.mal_id === null ? \"?order_by=\" + obj.order_by :  \"&order_by=\" + obj.order_by  }${obj === null ? \"\" : obj.listed === null ? \"\" : obj.id === null && obj.mal_id === null && obj.order_by === null ? \"?listed=\" + obj.listed : \"&listed=\" + obj.listed}${obj === null ? \"\" : obj.genre === null ? \"\" : obj.id === null && obj.mal_id === null && obj.order_by === null && obj.listed === null ? \"?genre=\" + obj.genre : \"&genre=\" + obj.genre}${obj === null ? \"\" : obj.limit === null ? \"\" : obj.id === null && obj.mal_id === null && obj.order_by === null && obj.listed === null && obj.genre === null ? \"?limit=\" + obj.limit : \"&limit=\" + obj.limit}${obj === null ? \"\" : obj.limit_offset === null ? \"\" : obj.id === null && obj.mal_id === null && obj.order_by === null && obj.listed === null && obj.genre === null && obj.limit ? \"?limit_offset=\" + obj.limit_offset : \"&limit_offset=\" + obj.limit_offset}`;\n  \n  return Get(path, config.isOnline);\n}\n\nconst getAnimeFromMal = (id = null) => {\n  let path = `api/grab-anime${id === null ? \"\" : \"?id=\" + id}`;\n  return Get(path, config.isOnline);\n}\n\nconst getAnimePlayList = (anime_mal_id, anime_play_quality) => {\n  let path = `api/playlist?anime_mal_id=${anime_mal_id}&anime_play_quality=${anime_play_quality}`;\n  return Get(path, config.isOnline);\n}\n\nconst getAnimeCounter = () => {\n  let path = 'api/counter2';\n  return Get(path, config.isOnline);\n}\n\nconst AnimeAPI = {\n  getAnime,\n  getAnimeFromMal,\n  getAnimeCounter,\n  getAnimePlayList,\n}\n\nexport default AnimeAPI;","import React from 'react';\nimport style from './Loading.module.css';\n\nclass Loading extends React.Component {\n  state = {\n    isHide : false\n  }\n  render(){\n    return(\n      <div className={style.loading} style={this.props.willHide}>\n        <div className={style.loadingIcon}>\n          <span>Loading...</span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Loading;","import React, {Component, createContext, Fragment} from 'react';\nimport AnimeAPI from '../service/Service';\nimport Loading from '../component/LoadingScreen/Loading';\n\n\nconst RootContext = createContext();\nconst Provider = RootContext.Provider;\n\nconst GlobalProvider = (ChildProviderComponent) => {\n  return(\n    class ParentProviderComponent extends Component {\n      constructor(props){\n        super(props)\n        this.state = {\n          Author : \"Code Pelajar\",\n          counter : 0,\n          Anime : [],\n        }\n        this.handleGetAnime()\n      }\n      \n      dispatch = () => {\n\n      }\n      // anime counter untuk update otomatis\n      handleAnimeCounter = () => {\n        AnimeAPI.getAnimeCounter().then((response) => {\n          console.log(response);\n        }, (error) => {\n          console.log(error)\n        }).catch((error) => {\n          console.log(error)\n        })\n      }\n      // show anime list pertama kali\n      handleGetAnime = () => {\n        let params = {\n          order_by : \"date_update\",\n          listed : \"asc\",\n          limit : 10,\n        }\n        AnimeAPI.getAnime(params)\n        .then((response) => {\n          if(response.status === true){\n            let anime = response.data\n            anime.reverse()\n            this.setState({\n              Anime : anime\n            })\n          } else {\n            console.log(response)\n          }\n        }, (error) => {\n          console.log(error);\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n      }\n      \n      // handle untuk generate anime info dari MAL\n      handleGetAnimeFromMal = (id) => {\n        AnimeAPI.getAnimeFromMal(id).then((response) => {\n          if(response.status === true){\n            let animeInfo = response.anime_info;\n            let animeState = [...this.state.Anime];\n            \n            animeState.push(animeInfo);\n            this.setState({\n              Anime : animeState,\n              counter : this.state.counter + 1\n            })\n          } else {\n            console.log(response)\n          }\n        }, (response) => {\n          console.log(response)\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n      }\n      \n      // send props\n      handleSendAnimeProps = () => {\n        let hasUpdate = true\n        return hasUpdate\n      }\n      \n      handleGapi = () => {\n        const gapiScript = document.createElement('script')\n        gapiScript.src = 'https://apis.google.com/js/api.js?onload=onGapiLoad'\n        // window.onGapiLoad = () => {\n        //   window.gapi.load('client', {\n        //     callback : () => {\n        //       this.testGoogleAPI();\n        //     },\n        //     oneerror : () => {\n        //       alert('Gapi Client Failed Loaded')\n        //     },\n        //     timeout : 5000,\n        //     ontimeout : () => {\n        //       alert(\"Timeout\")\n        //     }\n        //   });\n        // }\n        document.body.appendChild(gapiScript)\n      }\n      handlePlyrScript = () => {\n        const plyrscript = document.createElement('script');\n        plyrscript.src = 'https://cdn.plyr.io/3.5.2/plyr.polyfilled.js';      \n        \n        document.body.appendChild(plyrscript);\n      }\n\n      componentDidMount(){\n        // this.handleGapi();\n        // this.handlePlyrScript();\n      }\n\n      componentDidUpdate(){\n        \n      }\n\n      componentWillMount(){\n        this.handleSendAnimeProps()\n      }\n\n      componentWillUnmount(){\n        \n      }\n\n      render(){\n        // global state context\n        let GlobalState = {\n          RootState : this.state,\n          RootAction : this.dispatch, \n        }\n        return(\n          <Provider value={GlobalState}>\n            \n            {\n              this.state.Anime.length > 0 ?\n                <Fragment>\n                  <Loading willHide={{transition : 1, opacity : 0, zIndex : -10}} />\n                  <ChildProviderComponent {...this.props} />\n                </Fragment>\n               : \n                <Fragment>\n                  <Loading />\n                  <ChildProviderComponent />\n                </Fragment>\n            }\n          </Provider>\n        );\n      }\n    }\n  )\n}\n\nconst Consumer = RootContext.Consumer;\nexport const GlobalConsumer = (ChildConsumerComponent) => {\n  return(\n    class ParentConsumerComponent extends Component {\n      render(){\n        return(\n          <Consumer>\n            {\n              (value) => {\n                return(\n                  <ChildConsumerComponent {...value} {...this.props} />\n                )\n              }\n            }\n          </Consumer>\n        );\n      }\n    }\n  )\n}\n\nexport default GlobalProvider;","import React, {Component} from 'react';\nimport style from './Home.module.css';\nimport ContentWrapper from '../../template/ContentWrapper/ContentWrapper'\nimport AnimeStack from '../../../component/AnimeStack/AnimeStack';\nimport {GlobalConsumer} from '../../../context/Context';\nimport AnimeAPI from '../../../service/Service';\nclass Home extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      animeData : [],\n      emptyList : false,\n      isLoading : false,\n    }\n  }\n\n  handleAnimeData = () => {\n    let animeData = [...this.state.animeData]\n    setTimeout(() => {\n       animeData = this.props.RootState.Anime;\n       this.setState({\n        animeData : animeData\n       })\n    }, 100 )\n  }\n\n  handleLoadMore = () => {\n    let copyState = [...this.state.animeData];\n    let newState = [];\n    let offsetLength = copyState.length;\n    let params = {\n      order_by : \"date_update\",\n      listed : \"asc\",\n      limit_offset : offsetLength,\n      limit : 10, \n    }\n    this.setState({\n      isLoading : true\n    }, () => {\n      AnimeAPI.getAnime(params).then((response) => {\n        if(response.status === true){\n          newState = response.data;\n          newState.reverse();\n          this.setState({\n            animeData : [...copyState, ...newState],\n            isLoading : false\n          }, () => {\n            console.log(this.state.animeData);\n          });\n        } else {\n          console.log(response)\n          if(response.statusCode === 404){\n            this.setState({\n              emptyList : true,\n              isLoading : false,\n            })\n          }\n        }\n      })\n    })\n    \n  }\n  \n  handleLinkToPost = (anime_mal_id, anime_title, anime_data) => {\n     this.props.history.push(`/anime/${anime_mal_id}/${anime_title}`, anime_data);\n  }\n  \n  handleLinkToPlayer = (anime_mal_id, anime_title,anime_play_id, anime_play_title, anime_data) => {\n    this.props.history.push(`/anime/${anime_mal_id}/${anime_title}/${anime_play_id}/${anime_play_title}`, anime_data);\n  }\n  \n  \n  componentDidMount(){\n    this.handleAnimeData();\n    document.title = \"Weebonime - Nonton dan Download Anime Sepuasnya\";\n    document.getElementsByTagName('html')[0].scrollTop = 0\n  }\n  \n  componentWillReceiveProps(){\n    this.handleAnimeData();\n  }\n\n  render(){\n    return(\n      <div className={style.homeComponent}>\n        <AnimeStack\n          title=\"Latest Update\"\n          animeData = {this.state.animeData}\n          linkToPlayer = {(anime_mal_id, anime_title, anime_play_id,anime_play_title, anime_data) => this.handleLinkToPlayer(anime_mal_id, anime_title, anime_play_id, anime_play_title, anime_data)}\n          linkToPost = {(mal_id, anime_title, anime) => this.handleLinkToPost(mal_id, anime_title, anime)}\n          onLoadMore = {this.handleLoadMore}\n          emptyList = {this.state.emptyList}\n          isLoading = {this.state.isLoading}\n        />\n        {/* <AnimeStack\n          title=\"Popular Anime\"\n          animeData = {this.state.animeData}\n          linkToPost = {(mal_id, anime_title, anime) => this.handleLinkToPost(mal_id, anime_title, anime)} \n        /> */}\n      </div>\n    );\n  }\n}\nexport default GlobalConsumer(ContentWrapper(Home));","import React from 'react';\nimport style from './AnimePost.module.css';\n\n\nconst AnimePost = (props) => {\n  let anime = props.anime;\n  if(typeof(anime.anime_sinopsis) !== 'undefined'){\n    anime.anime_sinopsis = props.anime.anime_sinopsis\n    .replace(\"&amp;\",\"&\")\n    .replace(\"&gt;\",\">\")\n    .replace(\"&lt;\", \"<\")\n    .replace(\"& quot;\",'\"')\n    .replace(\"&quot;\",'\"')\n    .replace(\"& Quot;\",'\"')\n    .replace(\"& mdash;\", \"—\")\n  }\n  const PlayList = (data) => {\n    // console.log(props.anime);\n    let linkParams = {\n      anime_mal_id : props.anime.anime_mal_id,\n      anime_title : props.anime.anime_title.split(\" \").join(\"-\").toLocaleLowerCase().replace(\"!\", \"\").replace(\"?\", \"\").replace(\":\", \"\"),\n      anime_play_id : data.playdata.play_id,\n      anime_play_title: data.playdata.anime_play_title.split(\" \").join(\"-\").toLocaleLowerCase(),\n      anime_play_data : {\n        anime : anime,\n        currentPlay : data.playdata,\n        anotherList : anime.anime_play_data.play360,\n      },\n    }\n    return(\n      // <tr>\n      //   <td>{data.playdata.anime_play_title}</td>\n      //   <td style={{width : 150, textAlign : \"center\"}} >Watch!</td>\n      // </tr>\n      <div onClick={() => props.linkToPlayer(linkParams)} className={style.epsList}>\n        <div className={style.epsListItem}>\n          <div style={{backgroundImage : `url(${data.playdata.anime_thumb})` }} className={style.epsListThumb}>\n            {/* <img src= title={data.playdata.anime_play_title} alt={data.playdata.anime_play_title} /> */}\n          </div>\n          <div className={style.epsListText}>\n            <span className={style.epsListTitle}>{data.playdata.anime_play_title}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  \n  // if(typeof(anime.anime_play_data) !== \"undefined\"){\n  //   console.log(anime.anime_play_data.play360);\n  // }\n  return(\n    <div className={style.animePostComponent}>\n      <div className={style.animePostBody}>\n        <div className={style.animePostRow}>\n          <div className={style.animePostLeft}>\n            <div className={style.animeCover}>\n              <img className={style.animeCoverPic} src={anime.anime_poster} alt={anime.anime_title} title={anime.anime_title} />\n            </div>\n            <div className={style.animeInfo}>\n              <ul>\n                <li><span className={style.infoTitle}>Title:</span><span>{anime.anime_title}</span></li>              \n                <li><span className={style.infoTitle}>Japanese:</span><span>{anime.anime_alternative}</span></li>\n                <li><span className={style.infoTitle}>Status:</span><span>{anime.anime_status}</span></li>\n                <li><span className={style.infoTitle}>Type:</span><span>{anime.anime_type}</span></li>\n                <li><span className={style.infoTitle}>Genre:</span><span>{anime.anime_genre}</span></li>\n                <li><span className={style.infoTitle}>Score:</span><span>{anime.anime_score}</span></li>\n                <li><span className={style.infoTitle}>Total Eps:</span><span>{anime.anime_episode}</span></li>\n                <li><span className={style.infoTitle}>Duration per Eps:</span><span>{anime.anime_duration}</span></li>\n                <li><span className={style.infoTitle}>Studio:</span><span>{anime.anime_studios}</span></li>                \n                <li><span className={style.infoTitle}>Release:</span><span>{anime.anime_release}</span></li>\n              </ul>\n            </div>\n          </div>\n          <div className={style.animePostRight}>\n            <div className={style.animeSinopsis}>\n              <h2 className={style.animePostTitle}>{props.anime.anime_title}</h2>\n              <p dangerouslySetInnerHTML={{__html : anime.anime_sinopsis}}></p>\n            </div>\n            <div className={style.animeEpsList}>\n              {typeof(anime.anime_play_data) !== \"undefined\" ?\n                (anime.anime_play_data.play360.length > 0) ?\n                  anime.anime_play_data.play360.map((data) => {\n                    return(\n                      <PlayList key={data.play_id} playdata={data} />\n                    )\n                  })\n                :\n                  <div style={{textAlign:\"center\"}}>Tidak ada data apapun</div>\n              :\n                <div style={{textAlign:\"center\"}}>Tidak ada data apapun</div>\n              }\n            </div>\n          </div>\n          <div className={style.animePostBottom}>\n            <div className={style.animeVideo}>\n              <p>Bawah</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AnimePost;","import React, {Component} from 'react';\nimport {GlobalConsumer} from '../../../context/Context';\nimport ContentWrapper from '../../template/ContentWrapper/ContentWrapper';\nimport style from './Post.module.css';\nimport AnimePost from '../../../component/AnimePost/AnimePost';\nimport AnimeAPI from '../../../service/Service';\nimport Loading from '../../../component/LoadingScreen/Loading';\n\nclass Post extends Component {\n  state = {\n    anime : {}\n  }\n  \n  handleLinkToPlayer = (dataObj) => {\n    this.props.history.push(`/anime/${dataObj.anime_mal_id}/${dataObj.anime_title}/${dataObj.anime_play_id}/${dataObj.anime_play_title}`, dataObj.anime_play_data)\n  }\n  \n  componentDidMount(){\n    document.getElementsByTagName('html')[0].scrollTop = 0\n    let anime = this.props.history.location.state;\n    if(typeof(anime) !== \"undefined\"){\n      this.setState({\n        anime : anime\n      }, () => {\n        document.title = this.state.anime.anime_title\n      })\n    } else {\n      let anime_mal_id = this.props.match.params.id;\n      let params = {\n        mal_id : anime_mal_id\n      }\n      AnimeAPI.getAnime(params).then((response) => {\n        if(response.status === true){\n          let anime = response.data[0];\n          this.setState({\n            anime : anime\n          }, () => {\n            document.title = this.state.anime.anime_title\n          })\n        } else {\n          console.log(response);\n        }\n      }, (error) => {\n        console.log(error);\n      })\n    }\n  }\n  \n  render(){\n    return(\n      <div data-id={this.state.anime.anime_id} className={style.postSection}>\n        <div className={style.postRow}>\n           <div className={style.postLeft}>\n            {\n              this.state.anime.hasOwnProperty(\"anime_id\") ? \n              <>\n                <Loading willHide={{transition : 1, opacity : 0, zIndex : -10}} />\n                <AnimePost anime = {this.state.anime} linkToPlayer={(data) => this.handleLinkToPlayer(data)} />\n              </>\n              :\n              <Loading /> \n            }\n           </div>\n           <div className={style.postRight}>\n             \n           </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default GlobalConsumer(ContentWrapper(Post));","import React, {Component} from 'react';\nimport {BrowserRouter} from 'react-router-dom';\n\nconst RootRouter = (ChildRouter) => {\n  return(\n    class ParentRouter extends Component {\n      render(){\n        return(\n        <BrowserRouter>      \n          <ChildRouter {...this.props} />\n        </BrowserRouter>\n        )\n      }\n    }\n  )\n}\n\nexport default RootRouter;","import React, {Component, Fragment} from 'react';\nimport style from './AnimeList.module.css';\nimport AnimeAPI from '../../../service/Service';\nimport AnimeCard from '../../../component/AnimeCard/AnimeCard';\n\nconst SearchField = (props) => {\n  return(\n    <div className={style.searchSection}>\n      <h4>Cari Anime</h4>\n      <input onChange={(e) => props.onSearch(e.target.value)} type=\"text\" placeholder=\"Anime, Genre, Rating, dll..\" name=\"search_input\" />\n    </div>\n  );\n}\n\nclass AnimeList extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      animes : [],\n      animesOnSearch : [],\n      onSearch : false,\n      inputText : \"\",\n      simpleMode : false,\n    }\n  }\n  \n  handleGetAnimes = () => {\n    let params = {\n      order_by : \"anime_title\"\n    }\n    AnimeAPI.getAnime(params).then((response) => {\n      if(response.status === true){\n        let animes = response.data\n        let prevState = [...this.state.animes];\n        prevState = animes.sort()\n        this.setState({\n          animes : prevState\n        })\n      } else {\n        console.log(response);\n      }\n    })\n    .catch((error) => {\n      console.log(error)\n    })\n  }\n  \n  handleLinkToPost = (anime_mal_id, anime_title, anime_data) => {\n    this.props.history.push(`/anime/${anime_mal_id}/${anime_title}`, anime_data);\n  }\n  handleLinkToPlayer = (anime_mal_id, anime_title,anime_play_id, anime_play_title, anime_data) => {\n    this.props.history.push(`/anime/${anime_mal_id}/${anime_title}/${anime_play_id}/${anime_play_title}`, anime_data);\n  }\n  \n  handleSearch = (inputText) => {\n    if(inputText !== \"\"){\n      let resultAnime = [];\n      let animes = [...this.state.animes];\n      animes.forEach((anime) => {\n        let searchResult = anime.anime_title.toLowerCase().indexOf(inputText.toLowerCase());\n        let searchResultByGenre = anime.anime_genre.toLowerCase().indexOf(inputText.toLowerCase());\n        let searchResultByScore = anime.anime_score.toLowerCase().indexOf(inputText.toLowerCase());\n        let searchResultByRilis = anime.anime_release.toLowerCase().indexOf(inputText.toLowerCase());\n        let searchResultByStudio = anime.anime_studios.toLowerCase().indexOf(inputText.toLowerCase());\n        let searchResultBySinopsis = anime.anime_sinopsis.toLowerCase().indexOf(inputText.toLowerCase());\n        let ongoing = \"ongoing\";\n        let completed = \"completed\";\n        let searchResultByOngoing = ongoing.indexOf(inputText.toLowerCase());\n        let searchResultByCompleted = completed.indexOf(inputText.toLowerCase());\n        let searchResultByStatus = anime.anime_status.toLowerCase().indexOf(inputText.toLowerCase());\n        \n        if(searchResult !== -1 && searchResult !== \"undefined\"){\n          resultAnime.push(anime)\n        }else if(searchResultByGenre !== -1 && searchResultByGenre !== \"undefined\"){\n          resultAnime.push(anime)          \n        }else if(searchResultByScore !== -1 && searchResultByScore !== \"undefined\"){\n          resultAnime.push(anime)          \n        }else if(searchResultByRilis !== -1 && searchResultByRilis !== \"undefined\"){\n          resultAnime.push(anime)          \n        }else if(searchResultByStudio !== -1 && searchResultByStudio !== \"undefined\"){\n          resultAnime.push(anime)          \n        }else if(searchResultBySinopsis !== -1 && searchResultBySinopsis !== \"undefined\"){\n          resultAnime.push(anime)          \n        }else if(searchResultByOngoing !== -1 && searchResultByOngoing !== \"undefined\"){\n          if(anime.anime_status.toLowerCase() === \"currently airing\"){\n            resultAnime.push(anime)\n          }\n        }else if(searchResultByCompleted !== -1 && searchResultByCompleted !== \"undefined\"){\n          if(anime.anime_status.toLowerCase() === \"finished airing\"){\n            resultAnime.push(anime)\n          }\n        }else if(searchResultByStatus !== -1 && searchResultByStatus !== \"undefined\"){\n          resultAnime.push(anime)          \n        }\n      })\n      this.setState({\n        animesOnSearch : resultAnime,\n        onSearch : true,\n        inputText : inputText\n      })\n    } else {\n      this.setState({\n        animesOnSearch : [],\n        onSearch : false,\n        inputText : inputText\n      })\n    }\n  }\n  \n  handleMode = () => {\n    this.setState({\n      simpleMode : !this.state.simpleMode\n    })\n  }\n  \n  componentDidMount(){\n    this.handleGetAnimes();\n    document.title = \"Anime List - Cari Daftar Anime Favorit\"\n    document.getElementsByTagName('html')[0].scrollTop = 0\n  }\n  \n  render(){\n    let alphabeta = [];\n    \n    this.state.animes.map((anime, index) => {\n      if(alphabeta.length === 0){\n        alphabeta.push(anime.anime_title[0].toUpperCase())\n        return alphabeta;\n      }\n      let hasSameAlphaBeta = false;\n      alphabeta.find((value) => {\n        if(anime.anime_title[0].toUpperCase() === value){\n          hasSameAlphaBeta = true;\n          return true;\n        } else {\n          return false;\n        }\n      })\n      if(!hasSameAlphaBeta){\n        alphabeta.push(anime.anime_title[0].toUpperCase());\n      }\n      return hasSameAlphaBeta;\n    })\n    return(\n      <div className={style.animeListSection}>\n        <div className={style.animeListHeader}>\n          <SearchField onSearch={(inputText) => this.handleSearch(inputText)} />\n        </div>\n        <div className={style.animeListBody}>\n          <div className={style.mode}>\n            <div onClick={this.handleMode} className={style.btnWrapper}>\n              {this.state.simpleMode ? \n                <>\n                  <button >Card</button>\n                  <button className={style.active}>Simple</button>\n                </>\n                :\n                <>\n                  <button className={style.active}>Card</button>\n                  <button>Simple</button>\n                </> \n                }\n            </div>\n          </div>\n          <div className={style.animeListBlock}>\n            {\n              this.state.onSearch?\n                this.state.animesOnSearch.length > 0 ?\n                  <div className={style.animeListRow}>\n                  {\n                    this.state.animesOnSearch.map((anime) => {\n                      if(this.state.simpleMode){\n                        return(\n                          <li key={anime.anime_mal_id} onClick={() => this.handleLinkToPost(anime.anime_mal_id, anime.anime_title, anime)}>{anime.anime_title}</li>\n                        )\n                      } else {\n                        return(\n                          <AnimeCard\n                            key={anime.anime_mal_id}\n                            animeData = {anime}\n                            linkToPlayer = {(anime_mal_id, anime_title,anime_play_id, anime_play_title, anime_data) => this.handleLinkToPlayer(anime_mal_id, anime_title,anime_play_id, anime_play_title, anime_data)}\n                            linkToPost={(mal_id, anime_title, anime) => this.handleLinkToPost(mal_id, anime_title, anime)} />\n                        );    \n                      }\n                    })  \n                  }\n                  </div>\n                :\n                <div className={style.animeListRow}>\n                  <p style={{textAlign : \"center\", width : \"100%\"}}>Tidak ada pencarian dengan kata kunci : {this.state.inputText}</p>\n                </div>\n              : \n              alphabeta.map((alpha, index) => {\n                let has = false;\n                this.state.animes.forEach((anime) => {\n                  if(anime.anime_title[0].toUpperCase() === alpha){\n                    has = true\n                  }\n                })\n                if(has){\n                  return(\n                    <Fragment key={index}>\n                      <h4 id={alpha}><a href={`#${alpha}`}>{alpha}</a></h4>\n                      <div className={style.animeListRow}>\n                        {\n                          this.state.animes.map((anime, index) => {\n                            if(anime.anime_title[0].toUpperCase() === alpha){\n                              if(this.state.simpleMode){\n                                 return(\n                                   <li key={anime.anime_mal_id} onClick={() => this.handleLinkToPost(anime.anime_mal_id, anime.anime_title, anime)}>{anime.anime_title}</li>\n                                 )\n                              } else {\n                                return(\n                                  <AnimeCard\n                                    key={anime.anime_mal_id}\n                                    animeData = {anime}\n                                    linkToPlayer = {(anime_mal_id, anime_title,anime_play_id, anime_play_title, anime_data) => this.handleLinkToPlayer(anime_mal_id, anime_title,anime_play_id, anime_play_title, anime_data)}\n                                    linkToPost={(mal_id, anime_title, anime) => this.handleLinkToPost(mal_id, anime_title, anime)} />\n                                )\n                              }\n                            } else {\n                              return \"\";\n                            }\n                          })\n                        }\n                      </div>\n                    </Fragment>\n                  )\n                } else {\n                  return false;\n                }\n              })\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AnimeList;","import React, {Component} from 'react';\nimport './AnimeVideoPlayer.css';\nimport {Player} from 'video-react';\nimport \"../../../node_modules/video-react/dist/video-react.css\";\nimport {Icon} from 'react-icons-kit';\nimport {ic_play_circle_filled} from 'react-icons-kit/md/ic_play_circle_filled'\nimport {ic_pause_circle_filled} from 'react-icons-kit/md/ic_pause_circle_filled'\nimport ReactPlayer from 'react-player';\nclass AnimeVideoPlayer extends Component {\n  state = {\n    url: null,\n    pip: false,\n    playing: false,\n    controls: false,\n    light: false,\n    volume: 0.8,\n    muted: false,\n    played: 0,\n    loaded: 0,\n    duration: 0,\n    playbackRate: 1.0,\n    loop: false\n  }\n  \n  load = url => {\n    this.setState({\n      url,\n      played: 0,\n      loaded: 0,\n      pip: false\n    })\n  }\n  playPause = () => {\n    this.setState({ playing: !this.state.playing })\n  }\n  stop = () => {\n    this.setState({ url: null, playing: false })\n  }\n  toggleControls = () => {\n    const url = this.state.url\n    this.setState({\n      controls: !this.state.controls,\n      url: null\n    }, () => this.load(url))\n  }\n  toggleLight = () => {\n    this.setState({ light: !this.state.light })\n  }\n  toggleLoop = () => {\n    this.setState({ loop: !this.state.loop })\n  }\n  setVolume = e => {\n    this.setState({ volume: parseFloat(e.target.value) })\n  }\n  toggleMuted = () => {\n    this.setState({ muted: !this.state.muted })\n  }\n  setPlaybackRate = e => {\n    this.setState({ playbackRate: parseFloat(e.target.value) })\n  }\n  togglePIP = () => {\n    this.setState({ pip: !this.state.pip })\n  }\n  onPlay = () => {\n    console.log('onPlay')\n    this.setState({ playing: true })\n  }\n  playToggle = () => {\n    this.setState({\n      playing : !this.state.playing\n    })\n  }\n  onEnablePIP = () => {\n    console.log('onEnablePIP')\n    this.setState({ pip: true })\n  }\n  onDisablePIP = () => {\n    console.log('onDisablePIP')\n    this.setState({ pip: false })\n  }\n  onPause = () => {\n    console.log('onPause')\n    this.setState({ playing: false })\n  }\n  onSeekMouseDown = e => {\n    this.setState({ seeking: true })\n  }\n  onSeekChange = e => {\n    this.setState({ played: parseFloat(e.target.value) })\n  }\n  onSeekMouseUp = e => {\n    this.setState({ seeking: false })\n    this.player.seekTo(parseFloat(e.target.value))\n  }\n  onProgress = state => {\n    console.log('onProgress', state)\n    // We only want to update time slider if we are not currently seeking\n    if (!this.state.seeking) {\n      this.setState(state)\n    }\n  }\n  onEnded = () => {\n    console.log('onEnded')\n    this.setState({ playing: this.state.loop })\n  }\n  onDuration = (duration) => {\n    console.log('onDuration', duration)\n    this.setState({ duration })\n  }\n  // onClickFullscreen = () => {\n  //   screenfull.request(findDOMNode(this.player))\n  // }\n  renderLoadButton = (url, label) => {\n    return (\n      <button onClick={() => this.load(url)}>\n        {label}\n      </button>\n    )\n  }\n  ref = player => {\n    this.player = player\n  }\n  \n  render(){\n    const { url, playing, controls, light, volume, muted, loop, played, loaded, duration, playbackRate, pip } = this.state\n    const SEPARATOR = ' · ';\n    \n    return(\n      <div className=\"customPlayer\">\n        <div className=\"playerWrapper\">\n          <ReactPlayer\n            ref={this.ref}\n            autoPlay = {false}\n            className=\"reactPlayer\"\n            width='100%'\n            height='100%'\n            url={this.props.video.anime_play_link}\n            pip={pip}\n            playing={playing}\n            controls={controls}\n            light={light}\n            loop={loop}\n            playbackRate={playbackRate}\n            volume={volume}\n            muted={muted}\n            onReady={() => console.log('onReady')}\n            onStart={() => console.log('onStart')}\n            onPlay={this.onPlay}\n            onEnablePIP={this.onEnablePIP}\n            onDisablePIP={this.onDisablePIP}\n            onPause={this.onPause}\n            onBuffer={() => console.log('onBuffer')}\n            onSeek={e => console.log('onSeek', e)}\n            onEnded={this.onEnded}\n            onError={e => console.log('onError', e)}\n            onProgress={this.onProgress}\n            onDuration={this.onDuration}\n          />\n        </div>\n        <div className={`customPlayerLayer ${playing ? \"\": \"stoped\"}`}>\n          <span className=\"logoPlayer\">codepelajar.com</span>\n          <span onClick={this.playToggle} className=\"playIcon\">\n            <Icon icon={playing ? ic_pause_circle_filled :ic_play_circle_filled} size={80} />\n          </span>\n          <div className=\"customControl\">\n            <div className=\"leftControl\">\n              <span className=\"playButton\" onClick={this.playToggle}>{this.state.playing ? \"Jeda\" : \"Mainkan\"}</span>\n            </div>\n            <div className=\"sliderControl\">\n              <input\n                className=\"sliderSeek\"\n                type='range'\n                min={0}\n                max={1}\n                step='any'\n                value={played}\n                onMouseDown={this.onSeekMouseDown}\n                onChange={this.onSeekChange}\n                onMouseUp={this.onSeekMouseUp}\n              />\n              <progress className=\"playedProgress\" max={1} value={played} />\n              <progress className=\"loadedProgress\" max={1} value={loaded} />\n            </div>\n            <div className=\"rightControl\">\n              \n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n\n\n\nexport default AnimeVideoPlayer;","import React from 'react';\nimport styles from './AnimePlayList.module.css';\nimport {Icon} from 'react-icons-kit';\nimport {ic_play_arrow} from 'react-icons-kit/md/ic_play_arrow'\n\n\nconst AnimePlayList = (props) => { \n  return(\n    <div className={styles.section}>\n      <div className={styles.header}>\n        <h4 className={styles.headerTitle}>{props.playlist.anime.anime_title}</h4>\n        <span className={styles.headerInfo}>Jumlah Episode: {props.playlist.anime.anime_episode}</span>\n        <span className={styles.headerStatus}>{props.playlist.anime.anime_status}</span>\n      </div>\n      <div className={styles.body}>\n        <ul>\n          {\n            typeof(props.playlist.allPlayList) !== \"undefined\" && props.playlist.allPlayList.length > 0 ?\n            props.playlist.allPlayList.map((list) => {\n              \n              return(\n                <li className={list.play_id === props.playlist.currentEpisode.play_id ? styles.active : \"\" } onClick={() => props.changeVideo(list)} key={list.play_id}>\n                  <div className={styles.listItem}>\n                    <div className={styles.listThumbWrapper}>\n                      <div className={styles.thumb} style={{backgroundImage : `url(${list.anime_thumb})`}}>\n                        \n                      </div>\n                    </div>\n                    <div className={styles.listText}>\n                      <span className={styles.epsTitle}>{list.anime_play_title}</span>\n                      <span className={styles.played}>\n                        <Icon size={32} icon={ic_play_arrow} />\n                      </span>\n                    </div>\n                  </div>\n                </li>\n              )\n            })\n            :\n            \"Loading...\"\n          }\n        </ul>\n      </div>\n      <div className={styles.footer}>\n        \n      </div>\n    </div>\n  )\n}\n\nexport default AnimePlayList;\n","import React, {Component} from 'react';\nimport style from './PlayerPage.module.css';\nimport AnimeVideoPlayer from '../../../component/AnimeVideoPlayer/AnimeVideoPlayer';\nimport AnimePlayList from '../../../component/AnimePlayList/AnimePlayList';\nimport AnimeAPI from '../../../service/Service';\n\nclass PlayerPage extends Component {\n  \n  state = {\n    anime : {},\n    currentEpisode : {},\n    allPlayList : [],\n  }\n  \n  handleChangeVideo = (data) => {\n    this.setState({\n      currentEpisode : data\n    })\n  }\n  \n  handleGetCurrentPlayVideo = (play_id) => {\n    if(this.state.allPlayList.length > 0){\n      this.state.allPlayList.map((playlist) => {\n        if(playlist.play_id === play_id){\n          this.setState({\n            currentEpisode : playlist\n          })\n          return true\n        } else {\n          return false\n        }\n      })\n    }\n  }\n  handleGetAnimeData = (anime_mal_id, play_id) => {\n    let params = {\n      mal_id : anime_mal_id\n    }\n    AnimeAPI.getAnime(params).then((response) => {\n      if(response.status === true){\n        let anime = response.data[0]\n        let allPlayList = anime.anime_play_data.play360\n        let currentEpisode = {} \n        allPlayList.map((playlist) => {\n          if(playlist.play_id === play_id){\n            currentEpisode = playlist\n            return currentEpisode \n          } else {\n            return false\n          }\n        })\n        this.setState({\n          anime : response.data[0],\n          currentEpisode : currentEpisode,\n          allPlayList : allPlayList, \n        })\n      }\n    })\n  }\n  \n  componentDidMount = () => {\n    if(typeof(this.props.location.state) !== \"undefined\"){\n      let anime = this.props.location.state.anime;      \n      let currentEpisode = this.props.location.state.currentPlay;\n      let allPlayList = this.props.location.state.anotherList;\n      this.setState({\n        anime : anime,\n        currentEpisode : currentEpisode,\n        allPlayList : allPlayList,\n      })\n    } else {\n      let mal_id = this.props.match.params.id;\n      let play_id = this.props.match.params.play_id;\n      this.handleGetAnimeData(mal_id, play_id);\n    }\n    document.getElementsByTagName('html')[0].scrollTop = 0\n  }\n  \n  render(){\n    return(\n      <div className={style.playerPageSection}>\n        <div className={style.videoWrapper}>\n          <div className={style.videoRow}>\n            <div className={style.videoLeft}>\n              {\n                this.state.currentEpisode.hasOwnProperty(\"play_id\") ? \n                  <AnimeVideoPlayer video={this.state.currentEpisode} />\n                :\n                  \"Loading...\"\n              }\n            </div>\n            <div className={style.videoRight}>\n              {\n                this.state.allPlayList.length > 0 ? \n                  <AnimePlayList changeVideo={(data) => this.handleChangeVideo(data)} playlist={this.state} />\n                :\n                \"Loading...\"\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PlayerPage;","import React, {Component} from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport SiteWrapper from '../container/template/Wrapper/Wrapper';\nimport ContentWrapper from '../container/template/ContentWrapper/ContentWrapper';\nimport Home from '../container/pages/Home/Home';\nimport GlobalProvider from '../context/Context';\nimport Post from '../container/pages/Post/Post';\nimport RootRouter from './RootRouter';\nimport AnimeList from '../container/pages/AnimeList/AnimeList';\nimport PlayerPage from '../container/pages/PlayerPage/PlayerPage';\n\nclass Router extends Component {\n  render(){\n    return(\n        <Switch>\n          <Route path='/' component={Home} exact />\n          <Route path='/anime/:id/:title' component={Post} exact />\n          <Route path='/anime-list/' component={AnimeList} exact />\n          <Route path='/anime/:id/:title/:play_id/:play_title' component={PlayerPage} exact />\n        </Switch>\n    );\n  }\n}\n\nexport default RootRouter(GlobalProvider(SiteWrapper(ContentWrapper(Router))));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Router from './router/Router';\nimport './plyr.css';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"AnimePlayList_section__3T-22\",\"header\":\"AnimePlayList_header__1q_Oc\",\"headerTitle\":\"AnimePlayList_headerTitle__35JU4\",\"headerInfo\":\"AnimePlayList_headerInfo__2fEqh\",\"headerStatus\":\"AnimePlayList_headerStatus__1FQzW\",\"body\":\"AnimePlayList_body__2wBUh\",\"active\":\"AnimePlayList_active__3oXwp\",\"listItem\":\"AnimePlayList_listItem__3fvYZ\",\"listThumbWrapper\":\"AnimePlayList_listThumbWrapper__3tNz6\",\"listText\":\"AnimePlayList_listText__i8qQt\",\"epsTitle\":\"AnimePlayList_epsTitle__4SgTZ\",\"played\":\"AnimePlayList_played__ZQmdC\",\"thumb\":\"AnimePlayList_thumb___ITvB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerSection\":\"Header_headerSection__8fkvJ\",\"headerRow\":\"Header_headerRow__HNuRU\",\"headerLeft\":\"Header_headerLeft__2PtMh\",\"headerBrand\":\"Header_headerBrand__2vA7g\",\"headerTitle\":\"Header_headerTitle__3B544\",\"headerRight\":\"Header_headerRight__2jS8S\",\"headerNavigation\":\"Header_headerNavigation__2SNVZ\",\"menuToggle\":\"Header_menuToggle__2AIHP\",\"active\":\"Header_active__LIyLN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"animeListSection\":\"AnimeList_animeListSection__3Ov_-\",\"animeListHeader\":\"AnimeList_animeListHeader__2B0BO\",\"searchSection\":\"AnimeList_searchSection__T6h-6\",\"animeListBody\":\"AnimeList_animeListBody__xmjjr\",\"animeListBlock\":\"AnimeList_animeListBlock__2ShQb\",\"animeListRow\":\"AnimeList_animeListRow__3LoHD\",\"mode\":\"AnimeList_mode__1htTV\",\"btnWrapper\":\"AnimeList_btnWrapper__2WSzU\",\"active\":\"AnimeList_active__4ANZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stackWrapper\":\"AnimeStack_stackWrapper__3lC9H\",\"stackHeader\":\"AnimeStack_stackHeader__2GZWV\",\"stackTitle\":\"AnimeStack_stackTitle__25_ev\",\"stackSearch\":\"AnimeStack_stackSearch__spzR6\",\"animeCardRow\":\"AnimeStack_animeCardRow__3G0bH\",\"btnWrapper\":\"AnimeStack_btnWrapper__3gjyQ\",\"btnLoadMore\":\"AnimeStack_btnLoadMore__1VEPT\",\"btnLoadMoreEmpty\":\"AnimeStack_btnLoadMoreEmpty__1ITMO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"animePostComponent\":\"AnimePost_animePostComponent__rnYi3\",\"animePostBody\":\"AnimePost_animePostBody__2Wrfl\",\"animePostRow\":\"AnimePost_animePostRow__1XdI3\",\"animePostLeft\":\"AnimePost_animePostLeft__31_G3\",\"animePostRight\":\"AnimePost_animePostRight__3sGS-\",\"animePostBottom\":\"AnimePost_animePostBottom__3sL9P\",\"animeCover\":\"AnimePost_animeCover__8B6sR\",\"animeCoverPic\":\"AnimePost_animeCoverPic__6Tb5l\",\"animeInfo\":\"AnimePost_animeInfo__C8LLm\",\"infoTitle\":\"AnimePost_infoTitle__3qNng\",\"animeEpsList\":\"AnimePost_animeEpsList__1ahoX\",\"epsList\":\"AnimePost_epsList__L77tH\",\"epsListItem\":\"AnimePost_epsListItem__3yjZW\",\"epsListThumb\":\"AnimePost_epsListThumb__1oYBn\",\"epsListText\":\"AnimePost_epsListText__3Rzsf\",\"epsListTitle\":\"AnimePost_epsListTitle__1Q3PX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"animeCard\":\"AnimeCard_animeCard__1X8VB\",\"animeCardItem\":\"AnimeCard_animeCardItem__1oT-u\",\"animeCardImage\":\"AnimeCard_animeCardImage__2lPsg\",\"animeCardBody\":\"AnimeCard_animeCardBody__1Cgfm\",\"animeCardTitle\":\"AnimeCard_animeCardTitle__3aJyc\",\"animeCardLastUp\":\"AnimeCard_animeCardLastUp__1fLam\",\"rating\":\"AnimeCard_rating__38f5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerPageSection\":\"PlayerPage_playerPageSection__38qXV\",\"videoWrapper\":\"PlayerPage_videoWrapper__vnLz0\",\"videoRow\":\"PlayerPage_videoRow__7VFJ6\",\"videoLeft\":\"PlayerPage_videoLeft__2JIhY\",\"videoRight\":\"PlayerPage_videoRight__3pHmH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"siteWrapper\":\"Wrapper_siteWrapper__3au9U\",\"siteContent\":\"Wrapper_siteContent__7Y1AN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__2w88n\",\"loadingIcon\":\"Loading_loadingIcon__1dBb4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3jcUR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homeComponent\":\"Home_homeComponent__1WaqF\"};"],"sourceRoot":""}